services:
  test-server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: development
    ports:
      - "8000:8000"
    environment:
      SERVER_DEBUG: 'true'
      SERVER_ENVIRONMENT: 'testing'
      SERVER_DATABASE_URL: 'mongodb://user:pass@test-mongodb:27017/medical_jobs_tests'
      SERVER_HOST: '0.0.0.0'
      SERVER_PORT: '8000'
      SERVER_LOG_LEVEL: 'INFO'
      SERVER_CORS_ALLOW_ORIGINS: '["http://localhost:5000", "http://127.0.0.1:5000", "http://localhost:5001", "http://127.0.0.1:5001", "http://localhost:5002", "http://127.0.0.1:5002"]'
      SERVER_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      SERVER_GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      SERVER_EMAIL_HOST: 'mailcatcher'
      SERVER_EMAIL_PORT: '1025'
      SERVER_EMAIL_USERNAME: ''
      SERVER_EMAIL_PASSWORD: ''
      SERVER_EMAIL_FROM: 'noreply@example.com'
      SERVER_CAPTCHA_SECRET_KEY: "1x0000000000000000000000000000000AA"
      SERVER_S3_BUCKET_NAME: "medicaljobs"
      SERVER_ACCOUNTS_BASE_URL: "http://localhost:5002"
      SERVER_SEEKER_PORTAL_BASE_URL: "http://localhost:5001"
      SERVER_RECRUITER_PORTAL_BASE_URL: "http://localhost:5000"
      SERVER_RP_ID: 'localhost'
      SERVER_RP_NAME: 'Starter'
      SERVER_RP_EXPECTED_ORIGIN: 'http://localhost:5002'
      SERVER_JWE_SECRET_KEY: "ca07d5f965a534ffb07d1699e30385a6"
      SERVER_EMAIL_VERIFICATION_TOKEN_COOLDOWN: 20
      SERVER_PASSWORD_RESET_TOKEN_COOLDOWN: 20
      SERVER_GEOCODER_DOMAIN: "localhost:8080"
      SERVER_GEOCODER_USER_AGENT: "medical-jobs-server"
      SERVER_SENTRY_DSN: ${SERVER_SENTRY_DSN}
      SERVER_PERSISTED_QUERIES_PATH: "query_map.json"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8000/health/"]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      test-mongodb:
        condition: service_healthy

  test-accounts-ui:
    build:
      context: .
      dockerfile: apps/accounts/Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://localhost:8000
        - NEXT_PUBLIC_URL=http://localhost:5002
        - NEXT_PUBLIC_CAPTCHA_SITE_KEY=1x00000000000000000000AA
        - NEXT_PUBLIC_RECRUITER_PORTAL_BASE_URL=http://localhost:5001
        - NEXT_PUBLIC_SEEKER_PORTAL_BASE_URL=http://localhost:5000
        - NEXT_PUBLIC_SESSION_COOKIE_KEY=user_session
        - NEXT_PUBLIC_SENTRY_DSN=${ACCOUNTS_UI_SENTRY_DSN}
        - NEXT_PUBLIC_SENTRY_ORGANIZATION=vnadi
        - NEXT_PUBLIC_SENTRY_PROJECT=hospital-jobs-accounts-ui
        - NEXT_PUBLIC_ENVIRONMENT=testing
    ports:
      - "5002:5002"
    environment:
        HOST: 0.0.0.0
        JWE_SECRET_KEY: "ca07d5f965a534ffb07d1699e30385a6"
        API_URL: http://test-server:8000
        NODE_ENV: test
        CI: ${CI}
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5002/api/health/"]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      test-server:
        condition: service_healthy

  test-seeker-portal-ui:
    build:
      context: .
      dockerfile: apps/seeker-portal/Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://localhost:8000
        - NEXT_PUBLIC_URL=http://localhost:5000
        - NEXT_PUBLIC_RECRUITER_PORTAL_BASE_URL=http://localhost:5001
        - NEXT_PUBLIC_ACCOUNTS_BASE_URL=http://localhost:5002
        - NEXT_PUBLIC_SESSION_COOKIE_KEY=user_session
        - NEXT_PUBLIC_SENTRY_DSN=${SEEKER_PORTAL_UI_SENTRY_DSN}
        - NEXT_PUBLIC_SENTRY_ORGANIZATION=vnadi
        - NEXT_PUBLIC_SENTRY_PROJECT=hospital-jobs-seeker-portal-ui
        - NEXT_PUBLIC_ENVIRONMENT=testing
    ports:
      - "5000:5000"
    environment:
        HOST: 0.0.0.0
        JWE_SECRET_KEY: "ca07d5f965a534ffb07d1699e30385a6"
        API_URL: http://test-server:8000
        NODE_ENV: test
        CI: ${CI}
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5000/api/health/"]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      test-server:
        condition: service_healthy

  mailcatcher:
    image: schickling/mailcatcher:latest
    ports:
      - "1080:1080"
      - "1025:1025"

  test-mongodb:
    image: docker.io/bitnami/mongodb:8.0
    ports:
      - "27017:27017"
    environment:
      - MONGODB_USERNAME=user
      - MONGODB_PASSWORD=pass
      - MONGODB_DATABASE=medical_jobs_tests
      - MONGODB_ROOT_PASSWORD=rootpass
    volumes:
      - "test_mongodb_data:/bitnami/mongodb"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 10

  # playwright:
  #   image: mcr.microsoft.com/playwright:v1.51.0-noble
  #   environment:
  #     PLAYWRIGHT_BROWSERS_PATH: /usr/bin
  #     CI: true
  #   volumes:
  #     - /usr/bin:/usr/bin
  #   depends_on:
  #     test-accounts-ui:
  #       condition: service_healthy

volumes:
  test_mongodb_data:
    driver: local
